datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id             String          @id @default(cuid())
  name           String
  type           String
  address        String
  bankReqs       Json
  licenses       Json            @default("[]")
  rating         Float           @default(0)
  blacklistFlag  Boolean         @default(false)
  verifiedStatus String          @default("draft")
  lots           Lot[]
  bids           Bid[]
  escrowAccounts EscrowAccount[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Lot {
  id                 String         @id @default(cuid())
  customer           Company        @relation(fields: [customerCompanyId], references: [id])
  customerCompanyId  String
  tenderNumber       String?        @unique
  type               String // goods/services/works
  method             String
  title              String
  description        String
  budget             Float
  currency           String
  region             String
  status             String         @default("draft")
  publishedAt        DateTime?
  deadlines          Json
  criteria           Json
  docs               Json
  lots               Json           @default("[]") // Подлоты
  contactInfo        Json           @default("{}")
  deliveryTerms      Json           @default("{}")
  paymentTerms       Json           @default("{}")
  cancellationReason String?
  cancelledAt        DateTime?
  bids               Bid[]
  contract           Contract?
  escrowAccount      EscrowAccount?
  guarantees         Guarantee[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
}

model Bid {
  id                String      @id @default(cuid())
  lot               Lot         @relation(fields: [lotId], references: [id])
  lotId             String
  supplier          Company     @relation(fields: [supplierCompanyId], references: [id])
  supplierCompanyId String
  price             Float
  currency          String
  etaDays           Int
  attachments       Json        @default("[]")
  status            String      @default("pending")
  scoreBreakdown    Json?
  security          Security?
  contract          Contract?
  guarantees        Guarantee[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model EscrowAccount {
  id                String   @id @default(cuid())
  bankId            String
  lot               Lot      @relation(fields: [lotId], references: [id])
  lotId             String   @unique
  customer          Company  @relation(fields: [customerCompanyId], references: [id])
  customerCompanyId String
  status            String   @default("created")
  balance           Float    @default(0)
  heldPercent       Float    @default(50)
  fee1pctApplied    Boolean  @default(false)
  payouts           Payout[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Guarantee {
  id        String   @id @default(cuid())
  type      String // performance/advance
  bankId    String
  lot       Lot?     @relation(fields: [lotId], references: [id])
  lotId     String?
  bid       Bid?     @relation(fields: [bidId], references: [id])
  bidId     String?
  amount    Float
  status    String   @default("pending")
  docs      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Security {
  id                String    @id @default(cuid())
  bid               Bid       @relation(fields: [bidId], references: [id])
  bidId             String    @unique
  amount5pct        Float
  splitPlatform2pct Float
  splitCustomer3pct Float
  status            String    @default("pending")
  refundDueDate     DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Contract {
  id          String   @id @default(cuid())
  lot         Lot      @relation(fields: [lotId], references: [id])
  lotId       String   @unique
  winnerBid   Bid      @relation(fields: [winnerBidId], references: [id])
  winnerBidId String   @unique
  signStatus  String   @default("pending")
  docs        Json     @default("{}")
  acts        Act[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Act {
  id                   String   @id @default(cuid())
  contract             Contract @relation(fields: [contractId], references: [id])
  contractId           String
  stage                String
  amount               Float
  statusSignedCustomer Boolean  @default(false)
  statusSignedSupplier Boolean  @default(false)
  payout               Payout?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Payout {
  id        String        @id @default(cuid())
  escrow    EscrowAccount @relation(fields: [escrowId], references: [id])
  escrowId  String
  act       Act?          @relation(fields: [actId], references: [id])
  actId     String?       @unique
  amount    Float
  status    String        @default("pending")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Dispute {
  id         String   @id @default(cuid())
  entityType String
  entityId   String
  status     String   @default("open")
  resolution String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Fee {
  id         String   @id @default(cuid())
  type       String
  percent    Float?
  flat       Float?
  appliedTo  String
  exemptions Json     @default("[]")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Calendar {
  id           String   @id @default(cuid())
  date         DateTime @unique
  isWorkingDay Boolean
  country      String   @default("KZ")
  createdAt    DateTime @default(now())
}

model Document {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  path         String
  entityType   String // lot, bid, company, etc.
  entityId     String
  uploadedBy   String
  category     String   @default("general") // technical_specification, legal_documents, etc.
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([entityType, entityId])
  @@index([uploadedBy])
  @@index([category])
}

model Notification {
  id        String    @id @default(cuid())
  userId    String
  type      String // email, sms, push
  title     String
  message   String
  status    String    @default("pending") // pending, sent, failed
  sentAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
  @@index([status])
}
