
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  address: 'address',
  bankReqs: 'bankReqs',
  licenses: 'licenses',
  rating: 'rating',
  blacklistFlag: 'blacklistFlag',
  verifiedStatus: 'verifiedStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LotScalarFieldEnum = {
  id: 'id',
  customerCompanyId: 'customerCompanyId',
  tenderNumber: 'tenderNumber',
  type: 'type',
  method: 'method',
  title: 'title',
  description: 'description',
  budget: 'budget',
  currency: 'currency',
  region: 'region',
  status: 'status',
  publishedAt: 'publishedAt',
  deadlines: 'deadlines',
  criteria: 'criteria',
  docs: 'docs',
  lots: 'lots',
  contactInfo: 'contactInfo',
  deliveryTerms: 'deliveryTerms',
  paymentTerms: 'paymentTerms',
  cancellationReason: 'cancellationReason',
  cancelledAt: 'cancelledAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BidScalarFieldEnum = {
  id: 'id',
  lotId: 'lotId',
  supplierCompanyId: 'supplierCompanyId',
  price: 'price',
  currency: 'currency',
  etaDays: 'etaDays',
  attachments: 'attachments',
  status: 'status',
  scoreBreakdown: 'scoreBreakdown',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EscrowAccountScalarFieldEnum = {
  id: 'id',
  bankId: 'bankId',
  lotId: 'lotId',
  customerCompanyId: 'customerCompanyId',
  status: 'status',
  balance: 'balance',
  heldPercent: 'heldPercent',
  fee1pctApplied: 'fee1pctApplied',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GuaranteeScalarFieldEnum = {
  id: 'id',
  type: 'type',
  bankId: 'bankId',
  lotId: 'lotId',
  bidId: 'bidId',
  amount: 'amount',
  status: 'status',
  docs: 'docs',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SecurityScalarFieldEnum = {
  id: 'id',
  bidId: 'bidId',
  amount5pct: 'amount5pct',
  splitPlatform2pct: 'splitPlatform2pct',
  splitCustomer3pct: 'splitCustomer3pct',
  status: 'status',
  refundDueDate: 'refundDueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContractScalarFieldEnum = {
  id: 'id',
  lotId: 'lotId',
  winnerBidId: 'winnerBidId',
  signStatus: 'signStatus',
  docs: 'docs',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActScalarFieldEnum = {
  id: 'id',
  contractId: 'contractId',
  stage: 'stage',
  amount: 'amount',
  statusSignedCustomer: 'statusSignedCustomer',
  statusSignedSupplier: 'statusSignedSupplier',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PayoutScalarFieldEnum = {
  id: 'id',
  escrowId: 'escrowId',
  actId: 'actId',
  amount: 'amount',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DisputeScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  status: 'status',
  resolution: 'resolution',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeeScalarFieldEnum = {
  id: 'id',
  type: 'type',
  percent: 'percent',
  flat: 'flat',
  appliedTo: 'appliedTo',
  exemptions: 'exemptions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CalendarScalarFieldEnum = {
  id: 'id',
  date: 'date',
  isWorkingDay: 'isWorkingDay',
  country: 'country',
  createdAt: 'createdAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  originalName: 'originalName',
  mimeType: 'mimeType',
  size: 'size',
  path: 'path',
  entityType: 'entityType',
  entityId: 'entityId',
  uploadedBy: 'uploadedBy',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  message: 'message',
  status: 'status',
  sentAt: 'sentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Lot: 'Lot',
  Bid: 'Bid',
  EscrowAccount: 'EscrowAccount',
  Guarantee: 'Guarantee',
  Security: 'Security',
  Contract: 'Contract',
  Act: 'Act',
  Payout: 'Payout',
  Dispute: 'Dispute',
  Fee: 'Fee',
  Calendar: 'Calendar',
  Document: 'Document',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/ubuntu/ai-zakup/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/ubuntu/ai-zakup/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  phone     String   @unique\n  password  String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Company {\n  id             String          @id @default(cuid())\n  name           String\n  type           String\n  address        String\n  bankReqs       Json\n  licenses       Json            @default(\"[]\")\n  rating         Float           @default(0)\n  blacklistFlag  Boolean         @default(false)\n  verifiedStatus String          @default(\"draft\")\n  lots           Lot[]\n  bids           Bid[]\n  escrowAccounts EscrowAccount[]\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @updatedAt\n}\n\nmodel Lot {\n  id                 String         @id @default(cuid())\n  customer           Company        @relation(fields: [customerCompanyId], references: [id])\n  customerCompanyId  String\n  tenderNumber       String?        @unique\n  type               String // goods/services/works\n  method             String\n  title              String\n  description        String\n  budget             Float\n  currency           String\n  region             String\n  status             String         @default(\"draft\")\n  publishedAt        DateTime?\n  deadlines          Json\n  criteria           Json\n  docs               Json\n  lots               Json           @default(\"[]\") // Подлоты\n  contactInfo        Json           @default(\"{}\")\n  deliveryTerms      Json           @default(\"{}\")\n  paymentTerms       Json           @default(\"{}\")\n  cancellationReason String?\n  cancelledAt        DateTime?\n  bids               Bid[]\n  contract           Contract?\n  escrowAccount      EscrowAccount?\n  guarantees         Guarantee[]\n  createdAt          DateTime       @default(now())\n  updatedAt          DateTime       @updatedAt\n}\n\nmodel Bid {\n  id                String      @id @default(cuid())\n  lot               Lot         @relation(fields: [lotId], references: [id])\n  lotId             String\n  supplier          Company     @relation(fields: [supplierCompanyId], references: [id])\n  supplierCompanyId String\n  price             Float\n  currency          String\n  etaDays           Int\n  attachments       Json        @default(\"[]\")\n  status            String      @default(\"pending\")\n  scoreBreakdown    Json?\n  security          Security?\n  contract          Contract?\n  guarantees        Guarantee[]\n  createdAt         DateTime    @default(now())\n  updatedAt         DateTime    @updatedAt\n}\n\nmodel EscrowAccount {\n  id                String   @id @default(cuid())\n  bankId            String\n  lot               Lot      @relation(fields: [lotId], references: [id])\n  lotId             String   @unique\n  customer          Company  @relation(fields: [customerCompanyId], references: [id])\n  customerCompanyId String\n  status            String   @default(\"created\")\n  balance           Float    @default(0)\n  heldPercent       Float    @default(50)\n  fee1pctApplied    Boolean  @default(false)\n  payouts           Payout[]\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n}\n\nmodel Guarantee {\n  id        String   @id @default(cuid())\n  type      String // performance/advance\n  bankId    String\n  lot       Lot?     @relation(fields: [lotId], references: [id])\n  lotId     String?\n  bid       Bid?     @relation(fields: [bidId], references: [id])\n  bidId     String?\n  amount    Float\n  status    String   @default(\"pending\")\n  docs      Json     @default(\"{}\")\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Security {\n  id                String    @id @default(cuid())\n  bid               Bid       @relation(fields: [bidId], references: [id])\n  bidId             String    @unique\n  amount5pct        Float\n  splitPlatform2pct Float\n  splitCustomer3pct Float\n  status            String    @default(\"pending\")\n  refundDueDate     DateTime?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n}\n\nmodel Contract {\n  id          String   @id @default(cuid())\n  lot         Lot      @relation(fields: [lotId], references: [id])\n  lotId       String   @unique\n  winnerBid   Bid      @relation(fields: [winnerBidId], references: [id])\n  winnerBidId String   @unique\n  signStatus  String   @default(\"pending\")\n  docs        Json     @default(\"{}\")\n  acts        Act[]\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel Act {\n  id                   String   @id @default(cuid())\n  contract             Contract @relation(fields: [contractId], references: [id])\n  contractId           String\n  stage                String\n  amount               Float\n  statusSignedCustomer Boolean  @default(false)\n  statusSignedSupplier Boolean  @default(false)\n  payout               Payout?\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n}\n\nmodel Payout {\n  id        String        @id @default(cuid())\n  escrow    EscrowAccount @relation(fields: [escrowId], references: [id])\n  escrowId  String\n  act       Act?          @relation(fields: [actId], references: [id])\n  actId     String?       @unique\n  amount    Float\n  status    String        @default(\"pending\")\n  createdAt DateTime      @default(now())\n  updatedAt DateTime      @updatedAt\n}\n\nmodel Dispute {\n  id         String   @id @default(cuid())\n  entityType String\n  entityId   String\n  status     String   @default(\"open\")\n  resolution String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n}\n\nmodel Fee {\n  id         String   @id @default(cuid())\n  type       String\n  percent    Float?\n  flat       Float?\n  appliedTo  String\n  exemptions Json     @default(\"[]\")\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n}\n\nmodel Calendar {\n  id           String   @id @default(cuid())\n  date         DateTime @unique\n  isWorkingDay Boolean\n  country      String   @default(\"KZ\")\n  createdAt    DateTime @default(now())\n}\n\nmodel Document {\n  id           String   @id @default(cuid())\n  filename     String\n  originalName String\n  mimeType     String\n  size         Int\n  path         String\n  entityType   String // lot, bid, company, etc.\n  entityId     String\n  uploadedBy   String\n  category     String   @default(\"general\") // technical_specification, legal_documents, etc.\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  @@index([entityType, entityId])\n  @@index([uploadedBy])\n  @@index([category])\n}\n\nmodel Notification {\n  id        String    @id @default(cuid())\n  userId    String\n  type      String // email, sms, push\n  title     String\n  message   String\n  status    String    @default(\"pending\") // pending, sent, failed\n  sentAt    DateTime?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  @@index([userId])\n  @@index([status])\n}\n",
  "inlineSchemaHash": "de28b7af38320dc1271d854b00a234f0023a30171231d53b70524b185ebb59ec",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankReqs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"licenses\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"blacklistFlag\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lots\",\"kind\":\"object\",\"type\":\"Lot\",\"relationName\":\"CompanyToLot\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToCompany\"},{\"name\":\"escrowAccounts\",\"kind\":\"object\",\"type\":\"EscrowAccount\",\"relationName\":\"CompanyToEscrowAccount\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Lot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToLot\"},{\"name\":\"customerCompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deadlines\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"criteria\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"docs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lots\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contactInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deliveryTerms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"cancellationReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToLot\"},{\"name\":\"contract\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ContractToLot\"},{\"name\":\"escrowAccount\",\"kind\":\"object\",\"type\":\"EscrowAccount\",\"relationName\":\"EscrowAccountToLot\"},{\"name\":\"guarantees\",\"kind\":\"object\",\"type\":\"Guarantee\",\"relationName\":\"GuaranteeToLot\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Bid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lot\",\"kind\":\"object\",\"type\":\"Lot\",\"relationName\":\"BidToLot\"},{\"name\":\"lotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"BidToCompany\"},{\"name\":\"supplierCompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"etaDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scoreBreakdown\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"security\",\"kind\":\"object\",\"type\":\"Security\",\"relationName\":\"BidToSecurity\"},{\"name\":\"contract\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"BidToContract\"},{\"name\":\"guarantees\",\"kind\":\"object\",\"type\":\"Guarantee\",\"relationName\":\"BidToGuarantee\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EscrowAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lot\",\"kind\":\"object\",\"type\":\"Lot\",\"relationName\":\"EscrowAccountToLot\"},{\"name\":\"lotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEscrowAccount\"},{\"name\":\"customerCompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"heldPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fee1pctApplied\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payouts\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"EscrowAccountToPayout\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Guarantee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lot\",\"kind\":\"object\",\"type\":\"Lot\",\"relationName\":\"GuaranteeToLot\"},{\"name\":\"lotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bid\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToGuarantee\"},{\"name\":\"bidId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"docs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Security\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bid\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToSecurity\"},{\"name\":\"bidId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount5pct\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"splitPlatform2pct\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"splitCustomer3pct\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refundDueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Contract\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lot\",\"kind\":\"object\",\"type\":\"Lot\",\"relationName\":\"ContractToLot\"},{\"name\":\"lotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"winnerBid\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToContract\"},{\"name\":\"winnerBidId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"docs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"acts\",\"kind\":\"object\",\"type\":\"Act\",\"relationName\":\"ActToContract\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Act\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contract\",\"kind\":\"object\",\"type\":\"Contract\",\"relationName\":\"ActToContract\"},{\"name\":\"contractId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"statusSignedCustomer\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"statusSignedSupplier\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payout\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"ActToPayout\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"escrow\",\"kind\":\"object\",\"type\":\"EscrowAccount\",\"relationName\":\"EscrowAccountToPayout\"},{\"name\":\"escrowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"act\",\"kind\":\"object\",\"type\":\"Act\",\"relationName\":\"ActToPayout\"},{\"name\":\"actId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Dispute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Fee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"flat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"appliedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exemptions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Calendar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isWorkingDay\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

